@model List<Weather_App_2.Models.CityDataModel>
@{
    ViewData["Title"] = "Home Page";
}

@if (Model != null && Model.Any())
{
    <body>
        <div class="card" id="cardMain">
            <div class="text-center" id="content">
                <h1 class="display-4">Weather</h1>

                <!-- Search Bar -->
                <input type="text" id="citySearch" placeholder="Search city">
                <div id="citySearchResults"></div>

                <button class="btn-secondary rounded-pill" id="getWeatherButton">Get Weather</button>
                <div id="weatherResult"></div>
                <img id="cityImage" src="" alt="City Image" class="centeredImage" style="display:none; max-width:100%; height:auto;" />


            </div>
        </div>
        

        <script>
            document.getElementById('getWeatherButton').addEventListener('click', function () {
                const city = document.getElementById('citySearch').value; // Change here

                //city = city.substring(0, city.indexOf(" ")); //> logic here: maybe just use the first word only for the search term on the api

                const apiKey = '3baf0f7be5d8006268514f0e953a1f73';
                const weatherApiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`;


                fetch(weatherApiUrl)
                    .then(response => response.json())
                    .then(data => {
                        const weatherDescription = data.weather[0].description;
                        const temperatureKelvin = data.main.temp;
                        const cityName = data.name;
                        const country = data.sys.country;
                        const latitude = data.coord.lat;
                        const longitude = data.coord.lon;

                        // Convert temperature from Kelvin to Fahrenheit
                        const temperatureFahrenheit = (temperatureKelvin - 273.15) * 9 / 5 + 32;

                        document.getElementById('weatherResult').innerHTML = `
                                        <p>City: ${cityName}</p>
                                        <p>Country: ${country}</p>
                                        <p>Latitude: ${latitude}</p>
                                        <p>Longitude: ${longitude}</p>
                                        <p>Weather: ${weatherDescription}</p>
                                        <p>Temperature: ${temperatureFahrenheit.toFixed(2)} Fahrenheit</p>
                                    `;
                    })
                    .catch(error => {
                        console.error('Error fetching weather data:', error);
                        document.getElementById('weatherResult').innerHTML = '<p>Error fetching weather data. Please try again later.</p>';
                    });

                fetch(`https://api.unsplash.com/search/photos?query=${city}&client_id=rhe23yo1me2fYt6yUxJpKapyRZBCKOSMcFDEB1kQ1HA`)
                    .then(response => response.json())
                    .then(data => {
                        if (data && data.results && data.results.length > 0) {
                            const imageUrl = data.results[0].urls.regular;
                            const cityImage = document.getElementById('cityImage');
                            cityImage.src = imageUrl;
                            cityImage.style.display = 'block'; // Make the image visible
                        }
                    })
                    .catch(error => {
                        console.error('Error fetching image:', error);
                        // Optionally, hide the image element if there's an error
                        document.getElementById('cityImage').style.display = 'none';
                    });

            });

           
                // JavaScript for City Search
                document.getElementById('citySearch').addEventListener('input', function (e) {
                    const searchTerm = e.target.value;
                    if (searchTerm.length < 2) return; // Adjust the minimum character limit as needed

                    fetch(`/Home/SearchCities?term=${encodeURIComponent(searchTerm)}`)
                        .then(response => response.json())
                        .then(cities => {
                            let resultsHtml = cities.map(c => `<p>${c.cityName}, ${c.country}</p>`).join('');
                            document.getElementById('citySearchResults').innerHTML = resultsHtml;
                        })
                        .catch(error => console.error('Error:', error));
                });
        </script>
    </body>
}
else
{
    <p>No city data available.</p>
}
